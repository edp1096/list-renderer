{
  "version": 3,
  "sources": ["../ts/list-renderer.ts"],
  "sourcesContent": ["class ListRenderer {\r\n    root: HTMLElement\r\n    template: string\r\n    regexForVariables: RegExp\r\n    loopDatas: Object\r\n    baseTemplate: string\r\n\r\n    constructor(root: HTMLElement) {\r\n        this.root = root\r\n        this.template = \"\"\r\n        this.regexForVariables = /{{(.*?)}}/g\r\n        this.loopDatas = {}\r\n\r\n        this.baseTemplate = \"\"\r\n    }\r\n\r\n    evaluateString(cmd: string) { return new Function(\"'use strict'; return (\" + cmd + \")\")() }\r\n\r\n    parseTemplate(el: Element, dataName: string, loopName: string, idx: string) {\r\n        if (typeof el != \"object\") { return null }\r\n\r\n        const data = this.loopDatas[loopName][idx]\r\n\r\n        let result = \"\"\r\n        let condIF = el.getAttribute(\"lr-if\")\r\n        if (condIF != null) {\r\n            let isShow = true\r\n\r\n            condIF = condIF.replace(\"$index\", idx)\r\n\r\n            for (const [k, v] of Object.entries(data)) {\r\n                const tmpCondIF = condIF.replace(k, `\"${v}\"`)\r\n                try { isShow = this.evaluateString(tmpCondIF) } catch (e) { continue }\r\n                break\r\n            }\r\n\r\n            el.removeAttribute(\"lr-if\")\r\n\r\n            if ((isShow != null) && (!isShow)) {\r\n                el.innerHTML = \"\"\r\n                return el\r\n            }\r\n        }\r\n\r\n        let condCLK = el.getAttribute(\"lr-click\")\r\n        if (condCLK != undefined) {\r\n            condCLK = condCLK.replace(\"$index\", idx)\r\n\r\n            el.setAttribute(\"onclick\", condCLK)\r\n            el.removeAttribute(\"lr-click\")\r\n        }\r\n\r\n        let condCHG = el.getAttribute(\"lr-change\")\r\n        if (condCHG != undefined) {\r\n            condCHG = condCHG.replace(\"$index\", idx)\r\n\r\n            el.setAttribute(\"onchange\", condCHG)\r\n            el.removeAttribute(\"lr-change\")\r\n        }\r\n\r\n        let condCHK = el.getAttribute(\"lr-checked\")\r\n        if (condCHK != undefined) {\r\n            condCHK = condCHK.replace(\"$index\", idx)\r\n\r\n            el.setAttribute(\"onchange\", condCHK)\r\n            el.removeAttribute(\"lr-change\")\r\n        }\r\n\r\n        let dirID = el.getAttribute(\"lr-id\")\r\n        if (dirID != undefined) {\r\n            dirID = dirID.replace(\"$index\", idx)\r\n            el.setAttribute(\"data-id\", dirID)\r\n            el.removeAttribute(\"lr-id\")\r\n        }\r\n\r\n        if (el.children != undefined && el.children.length > 0) {\r\n            for (let i in el.children) {\r\n                const child = this.parseTemplate(el.children[i], dataName, loopName, idx)\r\n                if (child && child.innerHTML.trim() != \"\") { result += child.outerHTML }\r\n            }\r\n\r\n            el.innerHTML = \"\"\r\n        } else {\r\n            if (el.innerHTML != \"\") {\r\n                const attrs = el.getAttributeNames()\r\n                for (let i in attrs) {\r\n                    let attrValue = el.getAttribute(attrs[i])\r\n                    attrValue = attrValue.replace(\"$index\", idx)\r\n                    attrValue = attrValue.replace(this.regexForVariables, (_, val) => {\r\n                        let value = this.evaluateString(`${dataName}[\"${val}\"]`)\r\n                        if (value == undefined) { value = \"\" }\r\n                        return value\r\n                    })\r\n\r\n                    el.setAttribute(attrs[i], attrValue.replace(\"$index\", idx))\r\n                }\r\n                el.innerHTML = el.innerHTML.replace(this.regexForVariables, (_, cmd) => {\r\n                    let value = this.evaluateString(`${dataName}[\"${cmd}\"]`)\r\n                    if (value == undefined) { value = \"\" }\r\n                    return value\r\n                })\r\n            }\r\n        }\r\n\r\n        if (result.length > 0) {\r\n            el.innerHTML = result\r\n        }\r\n\r\n        return el\r\n    }\r\n\r\n    renderLoop() {\r\n        this.template = this.root.innerHTML\r\n        const c = this.root.children\r\n\r\n        for (let i in c) {\r\n            if ((c[i].nodeType != undefined) && (c[i].tagName.toLowerCase() != \"script\")) {\r\n                const loopName = c[i].getAttribute(\"lr-loop\")\r\n                const loopData = this.evaluateString(loopName)\r\n                this.loopDatas[loopName] = loopData\r\n\r\n                this.baseTemplate = c[i].innerHTML\r\n                let result = new Array()\r\n\r\n                if (loopName != undefined) {\r\n                    for (let j in loopData) {\r\n                        c[i].innerHTML = this.baseTemplate\r\n\r\n                        const child = this.parseTemplate(c[i], `${loopName}[${j}]`, loopName, j)\r\n                        result.push(child.innerHTML)\r\n                    }\r\n\r\n                    c[i].innerHTML = result.join(\"\").trim()\r\n                    c[i].removeAttribute(\"lr-loop\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() { this.renderLoop() }\r\n\r\n    restoreToTemplate() { this.root.innerHTML = this.template }\r\n\r\n    reload() {\r\n        this.restoreToTemplate()\r\n        this.render()\r\n    }\r\n}\r\n\r\n(globalThis as any).ListRenderer = ListRenderer\r\nexport default ListRenderer\r\n"],
  "mappings": "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",
  "names": []
}
